{"ast":null,"code":"export const quickSort = (array, order) => {\n  if (array.length < 1) {\n    return [];\n  }\n\n  ;\n  const rigth = [];\n  const left = [];\n  const pivot = array[0];\n\n  for (let index = 1; index < array.length; index++) {\n    const element = array[index];\n\n    if (element.name.toLowerCase() < pivot.name.toLowerCase()) {\n      left.push(element);\n    } else {\n      rigth.push(element);\n    }\n  }\n\n  ;\n\n  if (order === \"desending\") {\n    return [].concat(quickSort(rigth, order), pivot, quickSort(left, order));\n  } else {\n    return [].concat(quickSort(left, order), pivot, quickSort(rigth, order));\n  }\n};\nexport const orderHealth = (array, order) => {\n  const rigth = [];\n  const left = [];\n  const pivot = array[0];\n\n  if (array < 1) {\n    return [];\n  }\n\n  ;\n\n  for (let index = 1; index < array.length; index++) {\n    const element = array[index];\n\n    if (pivot.healthScore > element.healthScore) {\n      left.push(element);\n    } else {\n      rigth.push(element);\n    }\n  }\n\n  if (order === \"unhealthy\") {\n    return [].concat(orderHealth(left, order), pivot, orderHealth(rigth, order));\n  } else {\n    return [].concat(orderHealth(rigth, order), pivot, orderHealth(left, order));\n  }\n};\nexport const pagination = (array, number) => {\n  const paquetes = [];\n  let acumulador = [];\n\n  for (let index = 0; index < array.length; index++) {\n    const element = array[index];\n\n    if (acumulador.length < number) {\n      acumulador.push(element);\n    }\n\n    ;\n\n    if (acumulador.length === number) {\n      paquetes.push(acumulador);\n      acumulador = [];\n    }\n  }\n\n  ;\n  return paquetes;\n};","map":{"version":3,"sources":["/home/sebastian/Documentos/FT10-PI-Pokemon/client/src/components/home/order.js"],"names":["quickSort","array","order","length","rigth","left","pivot","index","element","name","toLowerCase","push","concat","orderHealth","healthScore","pagination","number","paquetes","acumulador"],"mappings":"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","sourcesContent":["export const quickSort = (array, order) => {\n\n    if(array.length < 1){\n      return []\n    };\n    const rigth= [];\n    const left= [];\n    const pivot = array[0];\n   \n    for (let index = 1; index < array.length; index++) {\n      const element = array[index];\n      if(element.name.toLowerCase() < pivot.name.toLowerCase()){\n        left.push(element);\n      }else{\n          rigth.push(element)\n         }\n    };\n    if(order === \"desending\"){\n      return [].concat(quickSort(rigth, order), pivot,  quickSort(left, order))\n    }else{\n      return [].concat(quickSort(left, order), pivot,  quickSort(rigth, order))\n\n    }   \n  };\n\n  export const orderHealth = (array, order)=>{\n      const rigth = [];\n      const left= [];\n      const pivot= array[0];\n      if( array <  1){\n          return []\n      };\n      for (let index = 1; index < array.length; index++) {\n          const element = array[index];\n          if(pivot.healthScore > element.healthScore){\n              left.push(element);\n          }else{\n              rigth.push(element)\n          }\n          \n      }\n      if(order === \"unhealthy\"){\n          return [].concat(orderHealth(left, order), pivot, orderHealth(rigth, order))\n      }else{\n        return [].concat(orderHealth(rigth, order), pivot, orderHealth(left, order))\n      }\n\n  };\n\n export  const pagination  = (array, number) => {\n    const paquetes = [];\n    let acumulador = [];\n    for (let index = 0; index < array.length; index++) {\n        const element = array[index];    \n        if(acumulador.length < number){\n            acumulador.push(element);\n        };\n        if( acumulador.length === number){\n            paquetes.push(acumulador);\n            acumulador= [];\n        }\n    };\n    return paquetes\n}"]},"metadata":{},"sourceType":"module"}