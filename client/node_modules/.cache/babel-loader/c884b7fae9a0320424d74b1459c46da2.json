{"ast":null,"code":"import { SUCCESS_REQUEST_POKEMON_BY_NAME, FAIL_REQUEST_POKEMON_BY_NAME, REQUESTING_POKEMON_BY_NAME, REQUESTING_ALL_POKEMON_API, FAIL_REQUEST_ALL_POKEMON_API, SUCCESS_REQUEST_ALL_POKEMON_API, REQUESTING_ALL_POKEMON_DATABASE, FAIL_REQUEST_ALL_POKEMON_DATABASE, SUCCESS_REQUEST_ALL_POKEMON_DATABASE } from '../constants/constants';\nconst initialState = {\n  pokemons: {\n    results: [],\n    errorPoke: '',\n    loading: false\n  }\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case REQUESTING_POKEMON_BY_NAME:\n      return { ...state.pokemons,\n        loading: true\n      };\n\n    case FAIL_REQUEST_POKEMON_BY_NAME:\n      return { ...state.pokemons,\n        errorPoke: action.payload,\n        loading: false\n      };\n\n    case SUCCESS_REQUEST_POKEMON_BY_NAME:\n      return { ...state.pokemons,\n        results: [action.payload],\n        loading: false\n      };\n\n    case SUCCESS_REQUEST_ALL_POKEMON_API:\n      return { ...state.pokemons,\n        results: action.payload,\n        loading: false\n      };\n\n    case REQUESTING_ALL_POKEMON_API:\n      return { ...state.pokemons,\n        loading: true\n      };\n\n    case FAIL_REQUEST_ALL_POKEMON_API:\n      return { ...state.pokemons,\n        errorPoke: action.payload,\n        loading: false\n      };\n\n    case REQUESTING_ALL_POKEMON_DATABASE:\n      return { ...state.pokemons,\n        loading: true\n      };\n\n    case FAIL_REQUEST_ALL_POKEMON_DATABASE:\n      return { ...state.pokemons,\n        errorPoke: action.payload,\n        loading: false\n      };\n\n    case SUCCESS_REQUEST_ALL_POKEMON_DATABASE:\n      return { ...state.pokemons,\n        results: action.payload,\n        loading: false\n      };\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/sebastian/Documentos/FT10-PI-Pokemon/client/src/redux/reducer/searchByName.jsx"],"names":["SUCCESS_REQUEST_POKEMON_BY_NAME","FAIL_REQUEST_POKEMON_BY_NAME","REQUESTING_POKEMON_BY_NAME","REQUESTING_ALL_POKEMON_API","FAIL_REQUEST_ALL_POKEMON_API","SUCCESS_REQUEST_ALL_POKEMON_API","REQUESTING_ALL_POKEMON_DATABASE","FAIL_REQUEST_ALL_POKEMON_DATABASE","SUCCESS_REQUEST_ALL_POKEMON_DATABASE","initialState","pokemons","results","errorPoke","loading","reducer","state","action","type","payload"],"mappings":"AAAA,SACIA,+BADJ,EAEIC,4BAFJ,EAGIC,0BAHJ,EAIIC,0BAJJ,EAKIC,4BALJ,EAMIC,+BANJ,EAOIC,+BAPJ,EAQIC,iCARJ,EASIC,oCATJ,QAUW,wBAVX;AAYA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,OAAO,EAAE,EADJ;AAELC,IAAAA,SAAS,EAAC,EAFL;AAGLC,IAAAA,OAAO,EAAE;AAHJ;AADQ,CAArB;;AASA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAiB;AAC7B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKf,0BAAL;AACI,aAAO,EACH,GAAGa,KAAK,CAACL,QADN;AACgBG,QAAAA,OAAO,EAAE;AADzB,OAAP;;AAGJ,SAAKZ,4BAAL;AACI,aAAO,EACH,GAAGc,KAAK,CAACL,QADN;AACgBE,QAAAA,SAAS,EAAEI,MAAM,CAACE,OADlC;AAC2CL,QAAAA,OAAO,EAAC;AADnD,OAAP;;AAGJ,SAAMb,+BAAN;AACI,aAAO,EACH,GAAGe,KAAK,CAACL,QADN;AACgBC,QAAAA,OAAO,EAAE,CAACK,MAAM,CAACE,OAAR,CADzB;AAC2CL,QAAAA,OAAO,EAAC;AADnD,OAAP;;AAGJ,SAAKR,+BAAL;AACI,aAAO,EACH,GAAGU,KAAK,CAACL,QADN;AACgBC,QAAAA,OAAO,EAAEK,MAAM,CAACE,OADhC;AACyCL,QAAAA,OAAO,EAAC;AADjD,OAAP;;AAGJ,SAAKV,0BAAL;AACI,aAAO,EACH,GAAGY,KAAK,CAACL,QADN;AACgBG,QAAAA,OAAO,EAAE;AADzB,OAAP;;AAGJ,SAAKT,4BAAL;AACI,aAAO,EACH,GAAGW,KAAK,CAACL,QADN;AACgBE,QAAAA,SAAS,EAAEI,MAAM,CAACE,OADlC;AAC2CL,QAAAA,OAAO,EAAC;AADnD,OAAP;;AAIH,SAAKP,+BAAL;AACG,aAAO,EACH,GAAGS,KAAK,CAACL,QADN;AACgBG,QAAAA,OAAO,EAAE;AADzB,OAAP;;AAGJ,SAAKN,iCAAL;AACI,aAAO,EACH,GAAGQ,KAAK,CAACL,QADN;AACgBE,QAAAA,SAAS,EAAEI,MAAM,CAACE,OADlC;AAC2CL,QAAAA,OAAO,EAAC;AADnD,OAAP;;AAGJ,SAAKL,oCAAL;AACI,aAAO,EACH,GAAGO,KAAK,CAACL,QADN;AACgBC,QAAAA,OAAO,EAAEK,MAAM,CAACE,OADhC;AACyCL,QAAAA,OAAO,EAAC;AADjD,OAAP;AAGJ,aAAOE,KAAP;AAtCJ;AAwCH,CAzCD;;AA2CA,eAAeD,OAAf","sourcesContent":["import {\n    SUCCESS_REQUEST_POKEMON_BY_NAME, \n    FAIL_REQUEST_POKEMON_BY_NAME,\n    REQUESTING_POKEMON_BY_NAME,\n    REQUESTING_ALL_POKEMON_API, \n    FAIL_REQUEST_ALL_POKEMON_API,\n    SUCCESS_REQUEST_ALL_POKEMON_API,\n    REQUESTING_ALL_POKEMON_DATABASE, \n    FAIL_REQUEST_ALL_POKEMON_DATABASE,\n    SUCCESS_REQUEST_ALL_POKEMON_DATABASE, \n    } from '../constants/constants';\n\nconst initialState = {\n    pokemons:{\n        results: [],\n        errorPoke:'',\n        loading: false,\n        \n    }\n}\n\nconst reducer = (state, action)=>{\n    switch(action.type){\n        case REQUESTING_POKEMON_BY_NAME:\n            return {\n                ...state.pokemons, loading: true\n            }\n        case FAIL_REQUEST_POKEMON_BY_NAME:\n            return {\n                ...state.pokemons, errorPoke: action.payload, loading:false\n            }    \n        case  SUCCESS_REQUEST_POKEMON_BY_NAME:\n            return {\n                ...state.pokemons, results: [action.payload], loading:false\n            }\n        case SUCCESS_REQUEST_ALL_POKEMON_API :\n            return {\n                ...state.pokemons, results: action.payload, loading:false\n            }\n        case REQUESTING_ALL_POKEMON_API:\n            return {\n                ...state.pokemons, loading: true\n            }\n        case FAIL_REQUEST_ALL_POKEMON_API:\n            return {\n                ...state.pokemons, errorPoke: action.payload, loading:false\n            }\n\n         case REQUESTING_ALL_POKEMON_DATABASE:\n            return {\n                ...state.pokemons, loading: true\n            }\n        case FAIL_REQUEST_ALL_POKEMON_DATABASE:\n            return {\n                ...state.pokemons, errorPoke: action.payload, loading:false\n            }    \n        case SUCCESS_REQUEST_ALL_POKEMON_DATABASE :\n            return {\n                ...state.pokemons, results: action.payload, loading:false\n            }\n        return state \n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}